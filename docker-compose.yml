services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: qubit_app
    restart: unless-stopped
    ports:
      - "${SERVER_PORT:-8080}:8080"
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}?sslmode=disable
      WEBHOOK_URL: ${WEBHOOK_URL}
      WEBHOOK_AUTH_KEY: ${WEBHOOK_AUTH_KEY}
      SERVER_PORT: "8080"
      SCHEDULER_INTERVAL_MINUTES: ${SCHEDULER_INTERVAL_MINUTES:-2}
      MESSAGE_BATCH_SIZE: ${MESSAGE_BATCH_SIZE:-2}
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - qubit_network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 10s

  postgres:
    image: postgres:16
    container_name: qubit_postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./env/postgres/migrations:/docker-entrypoint-initdb.d
    networks:
      - qubit_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
    driver: local

networks:
  qubit_network:
    driver: bridge
